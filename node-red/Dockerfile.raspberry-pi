###
# Build step
###
FROM balenalib/raspberry-pi-debian-node:12-stretch-build as build

WORKDIR /usr/src/app
COPY ./app/package.json package.json
COPY ./app/package-lock.json package-lock.json

RUN apt-get update && apt-get install -yq --no-install-recommends \
  i2c-tools \
  libi2c-dev \
  build-essential \
  python3 \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN JOBS=MAX npm install -g --production --unsafe-perm \
      node-red \
      node-red-contrib-balena \
    && JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force

###
# Runtime image
###
FROM balenalib/raspberry-pi-debian-node:12-stretch-run

RUN apt-get update && apt-get install -yq --no-install-recommends \
  rpi.gpio \
  python-dev \
  python-rpi.gpio \
  libatomic1 \
  git \

  openssh-client \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Enable i2c on the Raspberry Pi
RUN echo "i2c-dev" >> /etc/modules

# Defines our working directory in container
WORKDIR /usr/src/app
    
# Copy over the files created in the previous step, including lib/, bin/
COPY --from=build /usr/local/bin /usr/local/bin
COPY --from=build /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=build /usr/src/app/node_modules /usr/src/app/node_modules
COPY ./ssh_config /etc/ssh/ssh_config

# This will copy all files in our root to the working  directory in the container
COPY ./app ./

# server.js will run when container starts up on the device
# CMD ["bash", "/usr/src/app/start.sh"]
CMD modprobe i2c-dev && bash /usr/src/app/start.sh
